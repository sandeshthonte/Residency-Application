/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ResidencyManagement;

import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author Sandesh
 */
public class Reminder extends javax.swing.JFrame {

    /**
     * Creates new form Issues
     */
    public Reminder() {
         this.getContentPane().setBackground(new Color(72,209,204));
        initComponents();
        pnlReminder.removeAll();
        pnlReminder.revalidate();
    }
    public void infoMessage(String message,String title)
    {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnShowReminder = new javax.swing.JButton();
        btnCreateReminder = new javax.swing.JButton();
        pnlReminder = new javax.swing.JLayeredPane();
        pnlRemainderCreateReminder = new javax.swing.JPanel();
        lblCreateIssuesDate = new javax.swing.JLabel();
        txtTopic = new javax.swing.JTextField();
        lblCreateIssuesRoomNumber = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        lblCreateIssuesDescription = new javax.swing.JLabel();
        btnReminderCreateReminder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReminderDesc = new javax.swing.JTextArea();
        lblCreateIssuesDate1 = new javax.swing.JLabel();
        txtFlatNo = new javax.swing.JTextField();
        pnlRemainderEditReminder = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblShowReminders = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRemId = new javax.swing.JTextField();
        btnDeleteRem = new javax.swing.JButton();
        btnBackAdminReminder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(72, 209, 204));

        btnShowReminder.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnShowReminder.setText("View Reminders");
        btnShowReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowReminderActionPerformed(evt);
            }
        });

        btnCreateReminder.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnCreateReminder.setText("Send Reminder");
        btnCreateReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateReminderActionPerformed(evt);
            }
        });

        pnlReminder.setBackground(new java.awt.Color(72, 209, 204));

        pnlRemainderCreateReminder.setBackground(new java.awt.Color(72, 209, 204));
        pnlRemainderCreateReminder.setPreferredSize(new java.awt.Dimension(1370, 800));

        lblCreateIssuesDate.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        lblCreateIssuesDate.setText("Topic");

        txtTopic.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        lblCreateIssuesRoomNumber.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        lblCreateIssuesRoomNumber.setText("Due Date");

        txtDueDate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        lblCreateIssuesDescription.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        lblCreateIssuesDescription.setText("Description");

        btnReminderCreateReminder.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        btnReminderCreateReminder.setText("Submit");
        btnReminderCreateReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReminderCreateReminderActionPerformed(evt);
            }
        });

        txtReminderDesc.setColumns(20);
        txtReminderDesc.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtReminderDesc.setRows(5);
        jScrollPane1.setViewportView(txtReminderDesc);

        lblCreateIssuesDate1.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        lblCreateIssuesDate1.setText("Flat No");

        txtFlatNo.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        javax.swing.GroupLayout pnlRemainderCreateReminderLayout = new javax.swing.GroupLayout(pnlRemainderCreateReminder);
        pnlRemainderCreateReminder.setLayout(pnlRemainderCreateReminderLayout);
        pnlRemainderCreateReminderLayout.setHorizontalGroup(
            pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemainderCreateReminderLayout.createSequentialGroup()
                .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRemainderCreateReminderLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCreateIssuesRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateIssuesDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateIssuesDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCreateIssuesDate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTopic)
                            .addComponent(txtDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(txtFlatNo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlRemainderCreateReminderLayout.createSequentialGroup()
                        .addGap(438, 438, 438)
                        .addComponent(btnReminderCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(564, Short.MAX_VALUE))
        );
        pnlRemainderCreateReminderLayout.setVerticalGroup(
            pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemainderCreateReminderLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateIssuesDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlatNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateIssuesDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateIssuesRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(pnlRemainderCreateReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreateIssuesDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnReminderCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlRemainderEditReminder.setBackground(new java.awt.Color(72, 209, 204));
        pnlRemainderEditReminder.setAutoscrolls(true);
        pnlRemainderEditReminder.setPreferredSize(new java.awt.Dimension(1370, 800));

        tblShowReminders.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        tblShowReminders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rem ID", "Flat No", "Date", "Due Date", "Topic", "Reminder"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowReminders.setRequestFocusEnabled(false);
        tblShowReminders.setRowHeight(30);
        jScrollPane5.setViewportView(tblShowReminders);

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel2.setText("Delete Reminder");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel3.setText("ID");

        txtRemId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        btnDeleteRem.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        btnDeleteRem.setText("Delete");
        btnDeleteRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRemainderEditReminderLayout = new javax.swing.GroupLayout(pnlRemainderEditReminder);
        pnlRemainderEditReminder.setLayout(pnlRemainderEditReminderLayout);
        pnlRemainderEditReminderLayout.setHorizontalGroup(
            pnlRemainderEditReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemainderEditReminderLayout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addGroup(pnlRemainderEditReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRemainderEditReminderLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel3)
                        .addGap(60, 60, 60)
                        .addComponent(txtRemId, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnDeleteRem))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(360, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRemainderEditReminderLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(572, 572, 572))
        );
        pnlRemainderEditReminderLayout.setVerticalGroup(
            pnlRemainderEditReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemainderEditReminderLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(pnlRemainderEditReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteRem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(243, 243, 243))
        );

        pnlReminder.setLayer(pnlRemainderCreateReminder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnlReminder.setLayer(pnlRemainderEditReminder, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnlReminderLayout = new javax.swing.GroupLayout(pnlReminder);
        pnlReminder.setLayout(pnlReminderLayout);
        pnlReminderLayout.setHorizontalGroup(
            pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1400, Short.MAX_VALUE)
            .addGroup(pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlReminderLayout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(pnlRemainderCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
            .addGroup(pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlReminderLayout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(pnlRemainderEditReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );
        pnlReminderLayout.setVerticalGroup(
            pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 826, Short.MAX_VALUE)
            .addGroup(pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlReminderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlRemainderCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(pnlReminderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlReminderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlRemainderEditReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        btnBackAdminReminder.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnBackAdminReminder.setText("< Back");
        btnBackAdminReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAdminReminderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnShowReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnBackAdminReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(pnlReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2776, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBackAdminReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnCreateReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnShowReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(860, 860, 860))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowReminderActionPerformed
        // TODO add your handling code here:
        
        pnlReminder.removeAll();
        pnlReminder.revalidate();
        pnlReminder.add(pnlRemainderEditReminder);
        pnlReminder.revalidate();
        
        String ColumnName[] = {"Rem ID" ,"Flat No", "Date", "Due Date", "Topic", "Reminder"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(ColumnName);
        tblShowReminders.setModel(model);
        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
             //db.createCollection("AnnouncementsDB");
             MongoCollection<Document> RemindersDB = db.getCollection("RemindersDB");
             
                    FindIterable<Document> iterable =  RemindersDB.find ();
                    MongoCursor<Document> cursor = iterable.iterator();
                    while(cursor.hasNext()){
                        Document entry = cursor.next();
                        model.addRow( new Object[]{ entry.get("remid"), entry.get("date"), entry.get("topic"), entry.get("flatNo"), entry.get("dueDate"), entry.get("reminder") });                        
                    }
                   
                  
               mongo.close();
        }
        catch(Exception e){
            System.out.print(e);
        }
    }//GEN-LAST:event_btnShowReminderActionPerformed

    private void btnCreateReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateReminderActionPerformed
        // TODO add your handling code here:
        pnlReminder.removeAll();
        pnlReminder.revalidate();
        pnlReminder.add(pnlRemainderCreateReminder);
        pnlReminder.revalidate();
    }//GEN-LAST:event_btnCreateReminderActionPerformed

    private void btnReminderCreateReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReminderCreateReminderActionPerformed
        // TODO add your handling code here:
        String FlatNo = txtFlatNo.getText();
        String Topic = txtTopic.getText();
        String DueDate = txtDueDate.getText();
        String Reminder = txtReminderDesc.getText();
        

        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
             //db.createCollection("RemindersDB");
             MongoCollection<Document> RemindersDB = db.getCollection("RemindersDB");
             DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
            Date dateobj = new Date();
//            System.out.println(df.format(dateobj));
            String postDate = df.format(dateobj);
            int generatedRemID;
            while(true){
                    Random rand = new Random();
                    generatedRemID = rand.nextInt(100000); 
                    FindIterable<Document> iterable =  RemindersDB.find ( Filters.eq("remid", generatedRemID) );
                    MongoCursor<Document> cursor = iterable.iterator();
                    if(!(cursor.hasNext())){
                        break;
                    }
           }
            
            RemindersDB.insertOne(new Document("remid" , generatedRemID).append("date", postDate).append("topic", Topic).append("flatNo", FlatNo).append("dueDate", DueDate).append("reminder",Reminder));
            //txtCreateIssuesFirstName.setText("");
            //jTextArea2.setText("");
            this.dispose();
            new Reminder().setVisible(true);
             infoMessage("Reminder #" + generatedRemID   + " Sent to Flat No "+FlatNo+" !", "Reminder Sent Successfully!");
                  
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnReminderCreateReminderActionPerformed

    private void btnDeleteRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRemActionPerformed
        // TODO add your handling code here:
        String s=txtRemId.getText();
        int id=Integer.parseInt(s);
        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
             //db.createCollection("IssuesDB");
             MongoCollection<Document> RemindersDB = db.getCollection("RemindersDB");
             
                    FindIterable<Document> iterable =  RemindersDB.find (Filters.eq("remid",id));
                    MongoCursor<Document> cursor = iterable.iterator();
                    if(cursor.hasNext()){
                        RemindersDB.deleteOne(Filters.eq("remid",id));
                        infoMessage("Reminder #"+id+" deleted!","Success");
                        this.dispose();
                        new Reminder().setVisible(true);
                    }
                    else
                    {
                        infoMessage("Reminders #"+id+" Not Found!","Failure");
                    }
                   
                  //mongo.close();
                   
        }
        catch(Exception e){
            System.out.print(e);
        }
    }//GEN-LAST:event_btnDeleteRemActionPerformed

    private void btnBackAdminReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAdminReminderActionPerformed
        // TODO add your handling code here:
        new com.Admin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackAdminReminderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Reminder().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackAdminReminder;
    private javax.swing.JButton btnCreateReminder;
    private javax.swing.JButton btnDeleteRem;
    private javax.swing.JButton btnReminderCreateReminder;
    private javax.swing.JButton btnShowReminder;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCreateIssuesDate;
    private javax.swing.JLabel lblCreateIssuesDate1;
    private javax.swing.JLabel lblCreateIssuesDescription;
    private javax.swing.JLabel lblCreateIssuesRoomNumber;
    private javax.swing.JPanel pnlRemainderCreateReminder;
    private javax.swing.JPanel pnlRemainderEditReminder;
    private javax.swing.JLayeredPane pnlReminder;
    private javax.swing.JTable tblShowReminders;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtFlatNo;
    private javax.swing.JTextField txtRemId;
    private javax.swing.JTextArea txtReminderDesc;
    private javax.swing.JTextField txtTopic;
    // End of variables declaration//GEN-END:variables
}
