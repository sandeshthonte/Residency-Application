/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ResidencyManagement;

import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import com.Admin;
import com.mongodb.client.model.Filters;
import java.awt.Color;

/**
 *
 * @author Sandesh
 */
public class AdminIssues extends javax.swing.JFrame {

    /**
     * Creates new form Issues
     */
    String username;
    public AdminIssues() {
        this.getContentPane().setBackground(new Color(72,209,204));
        initComponents();     
        pnlIssue.removeAll();
        pnlIssue.revalidate();
        pnlIssue.add(pnlShowIssue);
        pnlIssue.revalidate();
               
        String ColumnName[] = {"Issue Id" ,"Date", "Issue Type", "Flat No", "Issue", "Status"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(ColumnName);
        tblShowIssuesAdmin.setModel(model);
        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
//             db.createCollection("IssuesDB");
             MongoCollection<Document> IssuesDB = db.getCollection("IssuesDB");
             
                    FindIterable<Document> iterable =  IssuesDB.find ();
                    MongoCursor<Document> cursor = iterable.iterator();
                    while(cursor.hasNext()){
                        Document entry = cursor.next();
                        model.addRow( new Object[]{ entry.get("issueid"), entry.get("date"), entry.get("issueType"), entry.get("flatNo"), entry.get("issue"), entry.get("status") });                        
                    }
                   
                  
               mongo.close();
        }
        catch(Exception e){
            System.out.print(e);
        }
               
    }
    public AdminIssues(String username) {
        this.getContentPane().setBackground(new Color(72,209,204));
        initComponents();
        pnlIssue.removeAll();
        pnlIssue.revalidate();
        pnlIssue.add(pnlShowIssue);
        pnlIssue.revalidate();
               this.username=username; 
               
               String ColumnName[] = {"Issue Id" ,"Date", "Issue Type", "Flat No", "Issue", "Status"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(ColumnName);
        tblShowIssuesAdmin.setModel(model);
        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
//             db.createCollection("IssuesDB");
             MongoCollection<Document> IssuesDB = db.getCollection("IssuesDB");
             
                    FindIterable<Document> iterable =  IssuesDB.find ();
                    MongoCursor<Document> cursor = iterable.iterator();
                    while(cursor.hasNext()){
                        Document entry = cursor.next();
                        model.addRow( new Object[]{ entry.get("issueid"), entry.get("date"), entry.get("issueType"), entry.get("flatNo"), entry.get("issue"), entry.get("status") });                        
                    }
                   
                  
               mongo.close();
        }
        catch(Exception e){
            System.out.print(e);
        }
               
        
    }
     public void infoMessage(String message,String title)
    {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlIssue = new javax.swing.JLayeredPane();
        pnlShowIssue = new javax.swing.JPanel();
        lblDeleteUserResidentialId1 = new javax.swing.JLabel();
        txtDIssueID = new javax.swing.JTextField();
        btnDeleteUserSubmit1 = new javax.swing.JButton();
        btnBackAdminIssues = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShowIssuesAdmin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(72, 209, 204));

        pnlIssue.setBackground(new java.awt.Color(72, 209, 204));

        pnlShowIssue.setAutoscrolls(true);
        pnlShowIssue.setPreferredSize(new java.awt.Dimension(1370, 800));

        lblDeleteUserResidentialId1.setFont(new java.awt.Font("Candara Light", 0, 20)); // NOI18N
        lblDeleteUserResidentialId1.setText("Issue Id");

        txtDIssueID.setFont(new java.awt.Font("Candara Light", 0, 20)); // NOI18N

        btnDeleteUserSubmit1.setFont(new java.awt.Font("Candara Light", 0, 20)); // NOI18N
        btnDeleteUserSubmit1.setText("Submit");
        btnDeleteUserSubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserSubmit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlShowIssueLayout = new javax.swing.GroupLayout(pnlShowIssue);
        pnlShowIssue.setLayout(pnlShowIssueLayout);
        pnlShowIssueLayout.setHorizontalGroup(
            pnlShowIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlShowIssueLayout.createSequentialGroup()
                .addGroup(pnlShowIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlShowIssueLayout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(lblDeleteUserResidentialId1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDIssueID, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlShowIssueLayout.createSequentialGroup()
                        .addGap(500, 500, 500)
                        .addComponent(btnDeleteUserSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(666, 666, 666))
        );
        pnlShowIssueLayout.setVerticalGroup(
            pnlShowIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlShowIssueLayout.createSequentialGroup()
                .addGap(497, 497, 497)
                .addGroup(pnlShowIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeleteUserResidentialId1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDIssueID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(btnDeleteUserSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlIssue.setLayer(pnlShowIssue, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnlIssueLayout = new javax.swing.GroupLayout(pnlIssue);
        pnlIssue.setLayout(pnlIssueLayout);
        pnlIssueLayout.setHorizontalGroup(
            pnlIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1400, Short.MAX_VALUE)
            .addGroup(pnlIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlIssueLayout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(pnlShowIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );
        pnlIssueLayout.setVerticalGroup(
            pnlIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 826, Short.MAX_VALUE)
            .addGroup(pnlIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlIssueLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlShowIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        btnBackAdminIssues.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        btnBackAdminIssues.setText("< Back");
        btnBackAdminIssues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAdminIssuesActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(72, 209, 204));

        tblShowIssuesAdmin.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        tblShowIssuesAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue ID", "Date", "Issue Type", "Flat No", "Issue", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowIssuesAdmin.setRequestFocusEnabled(false);
        tblShowIssuesAdmin.setRowHeight(30);
        jScrollPane2.setViewportView(tblShowIssuesAdmin);
        if (tblShowIssuesAdmin.getColumnModel().getColumnCount() > 0) {
            tblShowIssuesAdmin.getColumnModel().getColumn(4).setMinWidth(200);
            tblShowIssuesAdmin.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblShowIssuesAdmin.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnBackAdminIssues, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1731, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnBackAdminIssues)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(900, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackAdminIssuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAdminIssuesActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Admin().setVisible(true);
    }//GEN-LAST:event_btnBackAdminIssuesActionPerformed

    private void btnDeleteUserSubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserSubmit1ActionPerformed
        // TODO add your handling code here:
        String did = txtDIssueID.getText();
        int id=Integer.parseInt(did);
        try{
            MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
             MongoDatabase db = mongo.getDatabase("RESIDEM");
             //db.createCollection("IssuesDB");
             MongoCollection<Document> IssuesDB = db.getCollection("IssuesDB");
             
                    FindIterable<Document> iterable =  IssuesDB.find (Filters.eq("issueid",id));
                    MongoCursor<Document> cursor = iterable.iterator();
                    if(cursor.hasNext()){
                        IssuesDB.deleteOne(Filters.eq("issueid",id));
                        infoMessage("Issue #"+id+" deleted!","Success");
                        this.dispose();
                        new Admin().setVisible(true);
                    }
                    else
                    {
                        infoMessage("Issue #"+id+" Not Found!","Failure");
                    }
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteUserSubmit1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminIssues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AdminIssues().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackAdminIssues;
    private javax.swing.JButton btnDeleteUserSubmit1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDeleteUserResidentialId1;
    private javax.swing.JLayeredPane pnlIssue;
    private javax.swing.JPanel pnlShowIssue;
    private javax.swing.JTable tblShowIssuesAdmin;
    private javax.swing.JTextField txtDIssueID;
    // End of variables declaration//GEN-END:variables
}
